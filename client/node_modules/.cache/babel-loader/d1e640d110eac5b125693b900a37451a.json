{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\CF-ment\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { deletePost } from '../../../actions/posts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nconst ellipsify = str => {\n  if (str.length > 10) {\n    return str.substring(0, 10) + \"...\";\n  } else {\n    return str;\n  }\n};\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyless = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const SimpleModal = () => {\n    _s();\n\n    const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const body = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"simple-modal-title\",\n        children: \"Text in a modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"simple-modal-description\",\n        children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SimpleModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: post.selectedFile,\n        title: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: post.writer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: 'white'\n          },\n          size: \"small\",\n          onClick: () => setCurrentId(post._id),\n          children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n            fontSize: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: ellipsify(post.blog)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.cardActions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          size: \"small\",\n          color: \"primary\",\n          onClick: handleOpen,\n          children: [/*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 84\n          }, this), \" View \", post.viewCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"simple-modal-title\",\n          \"aria-describedby\": \"simple-modal-description\",\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: () => dispatch(deletePost(post._id)),\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 96\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(SimpleModal, \"p+PfpQWRJSW5eCi9+wrB37XJE8A=\", false, function () {\n    return [useStyles];\n  });\n};\n\n_s2(Post, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["G:/CF-ment/client/src/components/Posts/Post/Post.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","ThumbUpAltIcon","VisibilityTwoToneIcon","DeleteIcon","MoreHorizIcon","moment","useStyles","useDispatch","deletePost","makeStyles","Modal","ellipsify","str","length","substring","rand","Math","round","random","getModalStyle","top","left","transform","useStyless","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Post","post","setCurrentId","classes","dispatch","SimpleModal","modalStyle","useState","open","setOpen","handleOpen","handleClose","body","card","media","selectedFile","title","overlay","writer","createdAt","fromNow","overlay2","color","_id","details","tags","map","tag","blog","cardActions","viewCount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport useStyles from './styles';\r\nimport {useDispatch } from 'react-redux';\r\nimport {deletePost} from '../../../actions/posts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst  ellipsify = (str) => {\r\n  if (str.length > 10) {\r\n      return (str.substring(0, 10) + \"...\");\r\n  }\r\n  else {\r\n  return str;\r\n}\r\n}\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const SimpleModal=()=>{\r\n      const classes = useStyles();\r\n      // getModalStyle is not a pure function, we roll the style only on the first render\r\n      const [modalStyle] = React.useState(getModalStyle);\r\n      const [open, setOpen] = React.useState(false);\r\n    \r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n      const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n          <p id=\"simple-modal-description\">\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </p>\r\n          <SimpleModal />\r\n        </div>\r\n      );\r\n      \r\n\r\n\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n        <CardMedia className={classes.media} image={post.selectedFile } title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.writer}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        <div className={classes.overlay2}>\r\n          <Button \r\n            style={{ color: 'white' }} \r\n            size=\"small\" \r\n            onClick={()=>setCurrentId(post._id)}>\r\n            <MoreHorizIcon fontSize=\"default\" />\r\n          </Button>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{ellipsify(post.blog)}</Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button type=\"button\" size=\"small\" color=\"primary\" onClick={handleOpen} ><VisibilityTwoToneIcon fontSize=\"small\" /> View {post.viewCount} </Button>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n         \r\n          <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))} ><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n        </CardActions>\r\n      </Card>\r\n      \r\n    );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n\r\n"]},"metadata":{},"sourceType":"module"}